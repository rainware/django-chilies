"""
Django settings for examples project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
import json
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'xdvo6ccz0+=)xkm%ve3b40nu#$v)fuu&gwqw2#s(i3j_ng5o0f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',  # add for examples
    'bookstore'  # add for examples
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_chilies.middlewares.TrackerMiddleware'
]

REST_FRAMEWORK = {  # add for examples
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_RENDERER_CLASSES': [
        'django_chilies.utils.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ]
}

DJANGO_CHILIES = {  # add for examples
    'JSON_ENCODER': 'django_chilies.utils.JSONEncoder',
    'TRACKER': {
        'buffer_size': 1000,
        'level': 'INFO',
        'console': 'django',  # default console logger
        'http_tracker': 'http-tracker',
        'task_tracker': 'task-tracker',
        'writers': {
            'kafka': {
                'class': 'django_chilies.writers.KafkaWriter',
                'level': 'INFO',
                'topic': 'tracker',
                'producer': {
                    'bootstrap_servers': ['127.0.0.1:9092'],
                    'security_protocol': 'PLAINTEXT',
                    'value_serializer': lambda msg: json.dumps(msg, ensure_ascii=False).encode("utf-8"),
                }
            },
            'console-writer': {
                'class': 'django_chilies.writers.ConsoleWriter',
                'level': 'INFO'
            }
        },
        'trackers': {
            'http-tracker': {
                # 'class': 'django_chilies.trackers.HTTPTracker',
                'class': 'libs.trackers.CustomHTTPTracker',
                'level': 'INFO',
                'buffer_size': 1000,
                'console': 'console-logger',  # console logger
                'writers': ['console-writer']
            },
            'task-tracker': {
                # 'class': 'django_chilies.trackers.TaskTracker',
                'class': 'libs.trackers.CustomTaskTracker',
                'level': 'INFO',
                'buffer_size': 1000,
                'console': 'console-logger',  # console logger
                'writers': ['console-writer']
            }
        }
    }
}

LOGGING = {  # add for examples
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '[%(asctime)s] %(levelname)s %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'console-logger': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False
        },
        'django': {
            'handlers': ['console'],
            'level': 'ERROR',
            'propagate': False
        },
        'django.server': {
            'handlers': ['console'],
            'level': 'ERROR',
            'propagate': False
        }
    },
}

APP_NAME = 'examples'  # add for examples

CELERY_BROKER_URL = 'redis://127.0.0.1:6379/1'  # add for examples
CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/1'  # add for examples

ROOT_URLCONF = 'examples.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'examples.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
